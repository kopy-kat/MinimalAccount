/// @title SimpleHuffAccount
/// @notice Gas optimized ECDSA wrapper.
/// @author kopy-kat <https://github.com/kopy-kat>
/// @custom:inspiration SimpleAccountFactory <https://github.com/eth-infinitism/account-abstraction/blob/develop/contracts/samples/SimpleAccountFactory.sol>

/* Interface */
#define function createAccount(address,uint256) nonpayable returns (address)
#define function getAddress(address,uint256) view returns (address)

/* Constants */
#define constant ACCOUNT_INITCODE = 0x60908060093d393df360003560e01c80633a871cdd14610021578063b61d27f6146100565760006000fd5b33735ff137d4b0fdcd49dca30c7cf57e578a026d2789146100425760006000fd5b6000600060006000604435335af160206000f35b33735ff137d4b0fdcd49dca30c7cf57e578a026d2789146100775760006000fd5b606435806084600037600060209160006024356004355af1
#define constant ACCOUNT_INITCODE_LENGTH = 0x99
#define constant ACCOUNT_INITCODE_HASH = 0x669584df5858e119d1859786f71d23d0ba777d3913b4b343363b5ce7c3731d98

/* Methods */
#define macro CREATE_ACCOUNT() = takes (0) returns (0) {

    // [ACCOUNT_BYTECODE] 0x00 mstore

    0x60908060093d393df360003560e01c80633a871cdd14610021578063b61d27f6 0x00 mstore
    0x146100565760006000fd5b33735ff137d4b0fdcd49dca30c7cf57e578a026d27 0x20 mstore
    0x89146100425760006000fd5b6000600060006000604435335af160206000f35b 0x40 mstore
    0x33735ff137d4b0fdcd49dca30c7cf57e578a026d2789146100775760006000fd 0x60 mstore
    0x5b606435806084600037600060209160006024356004355af100000000000000 0x80 mstore


    // 0x60408060093d393df360003560e01c80633a871cdd14610021578063b61d27f6 0x00 mstore
    // 0x146100275760006000fd5b60206000f35b606435806084600037600060209160 0x20 mstore
    // 0x006024356004355af10000000000000000000000000000000000000000000000 0x40 mstore

    0x24 calldataload    // [salt]
    [ACCOUNT_INITCODE_LENGTH]    // [bytesize, salt]
    0x00    // [offset, bytesize, salt]
    0x00    // [value, offset, bytesize, salt]
    create2

    0x00 mstore
    0x20 0x00 return
}

#define macro GET_ADDRESS() = takes (0) returns (0) {
  0xff 0x00 mstore                    // []

  // Store this address @ 0x20:0x34
  address 0x60 shl 0x20 mstore        // []

  // Store the salt @ 0x34:0x54
  0x24 calldataload 
  0x34 mstore                         // []

  // Store the code hash @ 0x54:0x74
  [ACCOUNT_INITCODE_HASH] 
  0x54 mstore                         // []

  // Hash the packed data
  0x55 0x1f sha3                      // [raw_hash]

  // Clean the upper 12 bytes (96 bits or 0x60)
  0x60 shl 0x60 shr                   // [address]

  0x74 mstore
  0x20 0x74 return
}

#define macro MAIN() = takes (0) returns (0) {
    // Identify which function is being called.
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(createAccount) eq createAccount jumpi
    dup1 __FUNC_SIG(getAddress) eq getAddress jumpi

    0x00 0x00 revert

    createAccount:
        CREATE_ACCOUNT()
    getAddress:
        GET_ADDRESS()

}